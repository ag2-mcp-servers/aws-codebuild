# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T10:08:34+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, SecretStr, confloat, conint, constr


class AccountLimitExceededException(RootModel[Any]):
    root: Any


class ArtifactNamespace(Enum):
    NONE = 'NONE'
    BUILD_ID = 'BUILD_ID'


class ArtifactPackaging(Enum):
    NONE = 'NONE'
    ZIP = 'ZIP'


class ArtifactsType(Enum):
    CODEPIPELINE = 'CODEPIPELINE'
    S3 = 'S3'
    NO_ARTIFACTS = 'NO_ARTIFACTS'


class AuthType(Enum):
    OAUTH = 'OAUTH'
    BASIC_AUTH = 'BASIC_AUTH'
    PERSONAL_ACCESS_TOKEN = 'PERSONAL_ACCESS_TOKEN'


class BatchReportModeType(Enum):
    REPORT_INDIVIDUAL_BUILDS = 'REPORT_INDIVIDUAL_BUILDS'
    REPORT_AGGREGATED_BATCH = 'REPORT_AGGREGATED_BATCH'


class Boolean(RootModel[bool]):
    root: bool


class BucketOwnerAccess(Enum):
    NONE = 'NONE'
    READ_ONLY = 'READ_ONLY'
    FULL = 'FULL'


class BuildBatchPhaseType(Enum):
    SUBMITTED = 'SUBMITTED'
    DOWNLOAD_BATCHSPEC = 'DOWNLOAD_BATCHSPEC'
    IN_PROGRESS = 'IN_PROGRESS'
    COMBINE_ARTIFACTS = 'COMBINE_ARTIFACTS'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    STOPPED = 'STOPPED'


class BuildPhaseType(Enum):
    SUBMITTED = 'SUBMITTED'
    QUEUED = 'QUEUED'
    PROVISIONING = 'PROVISIONING'
    DOWNLOAD_SOURCE = 'DOWNLOAD_SOURCE'
    INSTALL = 'INSTALL'
    PRE_BUILD = 'PRE_BUILD'
    BUILD = 'BUILD'
    POST_BUILD = 'POST_BUILD'
    UPLOAD_ARTIFACTS = 'UPLOAD_ARTIFACTS'
    FINALIZING = 'FINALIZING'
    COMPLETED = 'COMPLETED'


class CacheMode(Enum):
    LOCAL_DOCKER_LAYER_CACHE = 'LOCAL_DOCKER_LAYER_CACHE'
    LOCAL_SOURCE_CACHE = 'LOCAL_SOURCE_CACHE'
    LOCAL_CUSTOM_CACHE = 'LOCAL_CUSTOM_CACHE'


class CacheType(Enum):
    NO_CACHE = 'NO_CACHE'
    S3 = 'S3'
    LOCAL = 'LOCAL'


class ComputeType(Enum):
    BUILD_GENERAL1_SMALL = 'BUILD_GENERAL1_SMALL'
    BUILD_GENERAL1_MEDIUM = 'BUILD_GENERAL1_MEDIUM'
    BUILD_GENERAL1_LARGE = 'BUILD_GENERAL1_LARGE'
    BUILD_GENERAL1_2XLARGE = 'BUILD_GENERAL1_2XLARGE'


class CredentialProviderType(Enum):
    SECRETS_MANAGER = 'SECRETS_MANAGER'


class DeleteProjectOutput(BaseModel):
    pass


class DeleteReportGroupOutput(BaseModel):
    pass


class DeleteReportOutput(BaseModel):
    pass


class DeleteResourcePolicyOutput(BaseModel):
    pass


class DeleteWebhookOutput(BaseModel):
    pass


class EnvironmentType(Enum):
    WINDOWS_CONTAINER = 'WINDOWS_CONTAINER'
    LINUX_CONTAINER = 'LINUX_CONTAINER'
    LINUX_GPU_CONTAINER = 'LINUX_GPU_CONTAINER'
    ARM_CONTAINER = 'ARM_CONTAINER'
    WINDOWS_SERVER_2019_CONTAINER = 'WINDOWS_SERVER_2019_CONTAINER'


class EnvironmentVariableType(Enum):
    PLAINTEXT = 'PLAINTEXT'
    PARAMETER_STORE = 'PARAMETER_STORE'
    SECRETS_MANAGER = 'SECRETS_MANAGER'


class FileSystemType(Enum):
    EFS = 'EFS'


class GitCloneDepth(RootModel[conint(ge=0)]):
    root: conint(ge=0)


class ImagePullCredentialsType(Enum):
    CODEBUILD = 'CODEBUILD'
    SERVICE_ROLE = 'SERVICE_ROLE'


class InvalidInputException(RootModel[Any]):
    root: Any


class InvalidateProjectCacheOutput(BaseModel):
    pass


class KeyInput(
    RootModel[
        constr(pattern=r'^([\p{L}\p{Z}\p{N}_.:/=@+\-]*)$', min_length=1, max_length=127)
    ]
):
    root: constr(
        pattern=r'^([\p{L}\p{Z}\p{N}_.:/=@+\-]*)$', min_length=1, max_length=127
    )


class LanguageType(Enum):
    JAVA = 'JAVA'
    PYTHON = 'PYTHON'
    NODE_JS = 'NODE_JS'
    RUBY = 'RUBY'
    GOLANG = 'GOLANG'
    DOCKER = 'DOCKER'
    ANDROID = 'ANDROID'
    DOTNET = 'DOTNET'
    BASE = 'BASE'
    PHP = 'PHP'


class ListCuratedEnvironmentImagesInput(BaseModel):
    pass


class ListSourceCredentialsInput(BaseModel):
    pass


class LogsConfigStatusType(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class NonEmptyString(RootModel[constr(min_length=1)]):
    root: constr(min_length=1)


class NonNegativeInt(RootModel[conint(ge=0)]):
    root: conint(ge=0)


class OAuthProviderException(RootModel[Any]):
    root: Any


class PageSize(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class Percentage(RootModel[confloat(ge=0.0, le=100.0)]):
    root: confloat(ge=0.0, le=100.0)


class PlatformType(Enum):
    DEBIAN = 'DEBIAN'
    AMAZON_LINUX = 'AMAZON_LINUX'
    UBUNTU = 'UBUNTU'
    WINDOWS_SERVER = 'WINDOWS_SERVER'


class ProjectArns(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString] = Field(..., max_length=100, min_length=1)


class ProjectCacheModes(RootModel[List[CacheMode]]):
    root: List[CacheMode]


class ProjectDescription(RootModel[constr(min_length=0, max_length=255)]):
    root: constr(min_length=0, max_length=255)


class ProjectName(
    RootModel[
        constr(
            pattern=r'[A-Za-z0-9][A-Za-z0-9\-_]{1,254}', min_length=2, max_length=255
        )
    ]
):
    root: constr(
        pattern=r'[A-Za-z0-9][A-Za-z0-9\-_]{1,254}', min_length=2, max_length=255
    )


class ProjectNames(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString] = Field(..., max_length=100, min_length=1)


class ProjectSortByType(Enum):
    NAME = 'NAME'
    CREATED_TIME = 'CREATED_TIME'
    LAST_MODIFIED_TIME = 'LAST_MODIFIED_TIME'


class ProjectVisibilityType(Enum):
    PUBLIC_READ = 'PUBLIC_READ'
    PRIVATE = 'PRIVATE'


class PutResourcePolicyInput(BaseModel):
    policy: NonEmptyString
    resourceArn: NonEmptyString


class PutResourcePolicyOutput(BaseModel):
    resourceArn: Optional[NonEmptyString] = None


class RegistryCredential(BaseModel):
    credential: NonEmptyString
    credentialProvider: CredentialProviderType


class ReportArns(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString] = Field(..., max_length=100, min_length=1)


class ReportCodeCoverageSortByType(Enum):
    LINE_COVERAGE_PERCENTAGE = 'LINE_COVERAGE_PERCENTAGE'
    FILE_PATH = 'FILE_PATH'


class ReportExportConfigType(Enum):
    S3 = 'S3'
    NO_EXPORT = 'NO_EXPORT'


class ReportGroupArns(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString] = Field(..., max_length=100, min_length=1)


class ReportGroupName(RootModel[constr(min_length=2, max_length=128)]):
    root: constr(min_length=2, max_length=128)


class ReportGroupSortByType(Enum):
    NAME = 'NAME'
    CREATED_TIME = 'CREATED_TIME'
    LAST_MODIFIED_TIME = 'LAST_MODIFIED_TIME'


class ReportGroupStatusType(Enum):
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'


class ReportGroupTrendFieldType(Enum):
    PASS_RATE = 'PASS_RATE'
    DURATION = 'DURATION'
    TOTAL = 'TOTAL'
    LINE_COVERAGE = 'LINE_COVERAGE'
    LINES_COVERED = 'LINES_COVERED'
    LINES_MISSED = 'LINES_MISSED'
    BRANCH_COVERAGE = 'BRANCH_COVERAGE'
    BRANCHES_COVERED = 'BRANCHES_COVERED'
    BRANCHES_MISSED = 'BRANCHES_MISSED'


class ReportPackagingType(Enum):
    ZIP = 'ZIP'
    NONE = 'NONE'


class ReportStatusType(Enum):
    GENERATING = 'GENERATING'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    INCOMPLETE = 'INCOMPLETE'
    DELETING = 'DELETING'


class ReportType(Enum):
    TEST = 'TEST'
    CODE_COVERAGE = 'CODE_COVERAGE'


class ResourceAlreadyExistsException(RootModel[Any]):
    root: Any


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class RetryBuildBatchType(Enum):
    RETRY_ALL_BUILDS = 'RETRY_ALL_BUILDS'
    RETRY_FAILED_BUILDS = 'RETRY_FAILED_BUILDS'


class RetryBuildInput(BaseModel):
    id: Optional[NonEmptyString] = None


class SecurityGroupIds(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString] = Field(..., max_length=5)


class SensitiveNonEmptyString(RootModel[SecretStr]):
    root: SecretStr


class ServerType(Enum):
    GITHUB = 'GITHUB'
    BITBUCKET = 'BITBUCKET'
    GITHUB_ENTERPRISE = 'GITHUB_ENTERPRISE'


class SharedResourceSortByType(Enum):
    ARN = 'ARN'
    MODIFIED_TIME = 'MODIFIED_TIME'


class SortOrderType(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class SourceAuthType(Enum):
    OAUTH = 'OAUTH'


class SourceCredentialsInfo(BaseModel):
    arn: Optional[NonEmptyString] = None
    authType: Optional[AuthType] = None
    serverType: Optional[ServerType] = None


class SourceCredentialsInfos(RootModel[List[SourceCredentialsInfo]]):
    root: List[SourceCredentialsInfo]


class SourceType(Enum):
    CODECOMMIT = 'CODECOMMIT'
    CODEPIPELINE = 'CODEPIPELINE'
    GITHUB = 'GITHUB'
    S3 = 'S3'
    BITBUCKET = 'BITBUCKET'
    GITHUB_ENTERPRISE = 'GITHUB_ENTERPRISE'
    NO_SOURCE = 'NO_SOURCE'


class StatusType(Enum):
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    FAULT = 'FAULT'
    TIMED_OUT = 'TIMED_OUT'
    IN_PROGRESS = 'IN_PROGRESS'
    STOPPED = 'STOPPED'


class StopBuildBatchInput(BaseModel):
    id: NonEmptyString


class StopBuildInput(BaseModel):
    id: NonEmptyString


class String(RootModel[str]):
    root: str


class Subnets(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString] = Field(..., max_length=16)


class TestCaseFilter(BaseModel):
    keyword: Optional[String] = None
    status: Optional[String] = None


class TimeOut(RootModel[conint(ge=5, le=480)]):
    root: conint(ge=5, le=480)


class Timestamp(RootModel[datetime]):
    root: datetime


class UpdateProjectVisibilityInput(BaseModel):
    projectArn: NonEmptyString
    projectVisibility: ProjectVisibilityType
    resourceAccessRole: Optional[NonEmptyString] = None


class UpdateProjectVisibilityOutput(BaseModel):
    projectArn: Optional[NonEmptyString] = None
    projectVisibility: Optional[ProjectVisibilityType] = None
    publicProjectAlias: Optional[NonEmptyString] = None


class ValueInput(
    RootModel[
        constr(pattern=r'^([\p{L}\p{Z}\p{N}_.:/=@+\-]*)$', min_length=0, max_length=255)
    ]
):
    root: constr(
        pattern=r'^([\p{L}\p{Z}\p{N}_.:/=@+\-]*)$', min_length=0, max_length=255
    )


class VpcConfig(BaseModel):
    securityGroupIds: Optional[SecurityGroupIds] = None
    subnets: Optional[Subnets] = None
    vpcId: Optional[NonEmptyString] = None


class WebhookBuildType(Enum):
    BUILD = 'BUILD'
    BUILD_BATCH = 'BUILD_BATCH'


class WebhookFilterType(Enum):
    EVENT = 'EVENT'
    BASE_REF = 'BASE_REF'
    HEAD_REF = 'HEAD_REF'
    ACTOR_ACCOUNT_ID = 'ACTOR_ACCOUNT_ID'
    FILE_PATH = 'FILE_PATH'
    COMMIT_MESSAGE = 'COMMIT_MESSAGE'


class WrapperBoolean(RootModel[bool]):
    root: bool


class WrapperInt(RootModel[int]):
    root: int


class WrapperLong(RootModel[int]):
    root: int


class XAmzTarget(Enum):
    CodeBuild_20161006_BatchDeleteBuilds = 'CodeBuild_20161006.BatchDeleteBuilds'


class XAmzTarget1(Enum):
    CodeBuild_20161006_BatchGetBuildBatches = 'CodeBuild_20161006.BatchGetBuildBatches'


class XAmzTarget2(Enum):
    CodeBuild_20161006_BatchGetBuilds = 'CodeBuild_20161006.BatchGetBuilds'


class XAmzTarget3(Enum):
    CodeBuild_20161006_BatchGetProjects = 'CodeBuild_20161006.BatchGetProjects'


class XAmzTarget4(Enum):
    CodeBuild_20161006_BatchGetReportGroups = 'CodeBuild_20161006.BatchGetReportGroups'


class XAmzTarget5(Enum):
    CodeBuild_20161006_BatchGetReports = 'CodeBuild_20161006.BatchGetReports'


class XAmzTarget6(Enum):
    CodeBuild_20161006_CreateProject = 'CodeBuild_20161006.CreateProject'


class XAmzTarget7(Enum):
    CodeBuild_20161006_CreateReportGroup = 'CodeBuild_20161006.CreateReportGroup'


class XAmzTarget8(Enum):
    CodeBuild_20161006_CreateWebhook = 'CodeBuild_20161006.CreateWebhook'


class XAmzTarget9(Enum):
    CodeBuild_20161006_DeleteBuildBatch = 'CodeBuild_20161006.DeleteBuildBatch'


class XAmzTarget10(Enum):
    CodeBuild_20161006_DeleteProject = 'CodeBuild_20161006.DeleteProject'


class XAmzTarget11(Enum):
    CodeBuild_20161006_DeleteReport = 'CodeBuild_20161006.DeleteReport'


class XAmzTarget12(Enum):
    CodeBuild_20161006_DeleteReportGroup = 'CodeBuild_20161006.DeleteReportGroup'


class XAmzTarget13(Enum):
    CodeBuild_20161006_DeleteResourcePolicy = 'CodeBuild_20161006.DeleteResourcePolicy'


class XAmzTarget14(Enum):
    CodeBuild_20161006_DeleteSourceCredentials = (
        'CodeBuild_20161006.DeleteSourceCredentials'
    )


class XAmzTarget15(Enum):
    CodeBuild_20161006_DeleteWebhook = 'CodeBuild_20161006.DeleteWebhook'


class XAmzTarget16(Enum):
    CodeBuild_20161006_DescribeCodeCoverages = (
        'CodeBuild_20161006.DescribeCodeCoverages'
    )


class XAmzTarget17(Enum):
    CodeBuild_20161006_DescribeTestCases = 'CodeBuild_20161006.DescribeTestCases'


class XAmzTarget18(Enum):
    CodeBuild_20161006_GetReportGroupTrend = 'CodeBuild_20161006.GetReportGroupTrend'


class XAmzTarget19(Enum):
    CodeBuild_20161006_GetResourcePolicy = 'CodeBuild_20161006.GetResourcePolicy'


class XAmzTarget20(Enum):
    CodeBuild_20161006_ImportSourceCredentials = (
        'CodeBuild_20161006.ImportSourceCredentials'
    )


class XAmzTarget21(Enum):
    CodeBuild_20161006_InvalidateProjectCache = (
        'CodeBuild_20161006.InvalidateProjectCache'
    )


class XAmzTarget22(Enum):
    CodeBuild_20161006_ListBuildBatches = 'CodeBuild_20161006.ListBuildBatches'


class XAmzTarget23(Enum):
    CodeBuild_20161006_ListBuildBatchesForProject = (
        'CodeBuild_20161006.ListBuildBatchesForProject'
    )


class XAmzTarget24(Enum):
    CodeBuild_20161006_ListBuilds = 'CodeBuild_20161006.ListBuilds'


class XAmzTarget25(Enum):
    CodeBuild_20161006_ListBuildsForProject = 'CodeBuild_20161006.ListBuildsForProject'


class XAmzTarget26(Enum):
    CodeBuild_20161006_ListCuratedEnvironmentImages = (
        'CodeBuild_20161006.ListCuratedEnvironmentImages'
    )


class XAmzTarget27(Enum):
    CodeBuild_20161006_ListProjects = 'CodeBuild_20161006.ListProjects'


class XAmzTarget28(Enum):
    CodeBuild_20161006_ListReportGroups = 'CodeBuild_20161006.ListReportGroups'


class XAmzTarget29(Enum):
    CodeBuild_20161006_ListReports = 'CodeBuild_20161006.ListReports'


class XAmzTarget30(Enum):
    CodeBuild_20161006_ListReportsForReportGroup = (
        'CodeBuild_20161006.ListReportsForReportGroup'
    )


class XAmzTarget31(Enum):
    CodeBuild_20161006_ListSharedProjects = 'CodeBuild_20161006.ListSharedProjects'


class XAmzTarget32(Enum):
    CodeBuild_20161006_ListSharedReportGroups = (
        'CodeBuild_20161006.ListSharedReportGroups'
    )


class XAmzTarget33(Enum):
    CodeBuild_20161006_ListSourceCredentials = (
        'CodeBuild_20161006.ListSourceCredentials'
    )


class XAmzTarget34(Enum):
    CodeBuild_20161006_PutResourcePolicy = 'CodeBuild_20161006.PutResourcePolicy'


class XAmzTarget35(Enum):
    CodeBuild_20161006_RetryBuild = 'CodeBuild_20161006.RetryBuild'


class XAmzTarget36(Enum):
    CodeBuild_20161006_RetryBuildBatch = 'CodeBuild_20161006.RetryBuildBatch'


class XAmzTarget37(Enum):
    CodeBuild_20161006_StartBuild = 'CodeBuild_20161006.StartBuild'


class XAmzTarget38(Enum):
    CodeBuild_20161006_StartBuildBatch = 'CodeBuild_20161006.StartBuildBatch'


class XAmzTarget39(Enum):
    CodeBuild_20161006_StopBuild = 'CodeBuild_20161006.StopBuild'


class XAmzTarget40(Enum):
    CodeBuild_20161006_StopBuildBatch = 'CodeBuild_20161006.StopBuildBatch'


class XAmzTarget41(Enum):
    CodeBuild_20161006_UpdateProject = 'CodeBuild_20161006.UpdateProject'


class XAmzTarget42(Enum):
    CodeBuild_20161006_UpdateProjectVisibility = (
        'CodeBuild_20161006.UpdateProjectVisibility'
    )


class XAmzTarget43(Enum):
    CodeBuild_20161006_UpdateReportGroup = 'CodeBuild_20161006.UpdateReportGroup'


class XAmzTarget44(Enum):
    CodeBuild_20161006_UpdateWebhook = 'CodeBuild_20161006.UpdateWebhook'


class BatchGetProjectsInput(BaseModel):
    names: ProjectNames


class BatchGetReportGroupsInput(BaseModel):
    reportGroupArns: ReportGroupArns


class BatchGetReportsInput(BaseModel):
    reportArns: ReportArns


class BuildArtifacts(BaseModel):
    artifactIdentifier: Optional[String] = None
    bucketOwnerAccess: Optional[BucketOwnerAccess] = None
    encryptionDisabled: Optional[WrapperBoolean] = None
    location: Optional[String] = None
    md5sum: Optional[String] = None
    overrideArtifactName: Optional[WrapperBoolean] = None
    sha256sum: Optional[String] = None


class BuildArtifactsList(RootModel[List[BuildArtifacts]]):
    root: List[BuildArtifacts] = Field(..., max_length=12, min_length=0)


class BuildBatchFilter(BaseModel):
    status: Optional[StatusType] = None


class BuildBatchIds(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString] = Field(..., max_length=100, min_length=0)


class BuildIds(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString] = Field(..., max_length=100, min_length=1)


class BuildNotDeleted(BaseModel):
    id: Optional[NonEmptyString] = None
    statusCode: Optional[String] = None


class BuildReportArns(RootModel[List[String]]):
    root: List[String]


class BuildStatusConfig(BaseModel):
    context: Optional[String] = None
    targetUrl: Optional[String] = None


class BuildsNotDeleted(RootModel[List[BuildNotDeleted]]):
    root: List[BuildNotDeleted]


class CloudWatchLogsConfig(BaseModel):
    groupName: Optional[String] = None
    status: LogsConfigStatusType
    streamName: Optional[String] = None


class CodeCoverage(BaseModel):
    branchCoveragePercentage: Optional[Percentage] = None
    branchesCovered: Optional[NonNegativeInt] = None
    branchesMissed: Optional[NonNegativeInt] = None
    expired: Optional[Timestamp] = None
    filePath: Optional[NonEmptyString] = None
    id: Optional[NonEmptyString] = None
    lineCoveragePercentage: Optional[Percentage] = None
    linesCovered: Optional[NonNegativeInt] = None
    linesMissed: Optional[NonNegativeInt] = None
    reportARN: Optional[NonEmptyString] = None


class CodeCoverageReportSummary(BaseModel):
    branchCoveragePercentage: Optional[Percentage] = None
    branchesCovered: Optional[NonNegativeInt] = None
    branchesMissed: Optional[NonNegativeInt] = None
    lineCoveragePercentage: Optional[Percentage] = None
    linesCovered: Optional[NonNegativeInt] = None
    linesMissed: Optional[NonNegativeInt] = None


class CodeCoverages(RootModel[List[CodeCoverage]]):
    root: List[CodeCoverage]


class ComputeTypesAllowed(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString]


class DebugSession(BaseModel):
    sessionEnabled: Optional[WrapperBoolean] = None
    sessionTarget: Optional[NonEmptyString] = None


class DeleteBuildBatchInput(BaseModel):
    id: NonEmptyString


class DeleteBuildBatchOutput(BaseModel):
    buildsDeleted: Optional[BuildIds] = None
    buildsNotDeleted: Optional[BuildsNotDeleted] = None
    statusCode: Optional[String] = None


class DeleteProjectInput(BaseModel):
    name: NonEmptyString


class DeleteReportGroupInput(BaseModel):
    arn: NonEmptyString
    deleteReports: Optional[Boolean] = None


class DeleteReportInput(BaseModel):
    arn: NonEmptyString


class DeleteResourcePolicyInput(BaseModel):
    resourceArn: NonEmptyString


class DeleteSourceCredentialsInput(BaseModel):
    arn: NonEmptyString


class DeleteSourceCredentialsOutput(BaseModel):
    arn: Optional[NonEmptyString] = None


class DeleteWebhookInput(BaseModel):
    projectName: ProjectName


class DescribeCodeCoveragesInput(BaseModel):
    maxLineCoveragePercentage: Optional[Percentage] = None
    maxResults: Optional[PageSize] = None
    minLineCoveragePercentage: Optional[Percentage] = None
    nextToken: Optional[String] = None
    reportArn: NonEmptyString
    sortBy: Optional[ReportCodeCoverageSortByType] = None
    sortOrder: Optional[SortOrderType] = None


class DescribeCodeCoveragesOutput(BaseModel):
    codeCoverages: Optional[CodeCoverages] = None
    nextToken: Optional[String] = None


class DescribeTestCasesInput(BaseModel):
    filter: Optional[TestCaseFilter] = None
    maxResults: Optional[PageSize] = None
    nextToken: Optional[String] = None
    reportArn: String


class EnvironmentVariable(BaseModel):
    name: NonEmptyString
    type: Optional[EnvironmentVariableType] = None
    value: String


class EnvironmentVariables(RootModel[List[EnvironmentVariable]]):
    root: List[EnvironmentVariable]


class ExportedEnvironmentVariable(BaseModel):
    name: Optional[NonEmptyString] = None
    value: Optional[String] = None


class ExportedEnvironmentVariables(RootModel[List[ExportedEnvironmentVariable]]):
    root: List[ExportedEnvironmentVariable]


class GetReportGroupTrendInput(BaseModel):
    numOfReports: Optional[PageSize] = None
    reportGroupArn: NonEmptyString
    trendField: ReportGroupTrendFieldType


class GetResourcePolicyInput(BaseModel):
    resourceArn: NonEmptyString


class GetResourcePolicyOutput(BaseModel):
    policy: Optional[NonEmptyString] = None


class GitSubmodulesConfig(BaseModel):
    fetchSubmodules: WrapperBoolean


class Identifiers(RootModel[List[NonEmptyString]]):
    root: List[NonEmptyString]


class ImageVersions(RootModel[List[String]]):
    root: List[String]


class ImportSourceCredentialsInput(BaseModel):
    authType: AuthType
    serverType: ServerType
    shouldOverwrite: Optional[WrapperBoolean] = None
    token: SensitiveNonEmptyString
    username: Optional[NonEmptyString] = None


class ImportSourceCredentialsOutput(BaseModel):
    arn: Optional[NonEmptyString] = None


class InvalidateProjectCacheInput(BaseModel):
    projectName: NonEmptyString


class ListBuildBatchesForProjectInput(BaseModel):
    filter: Optional[BuildBatchFilter] = None
    maxResults: Optional[PageSize] = None
    nextToken: Optional[String] = None
    projectName: Optional[NonEmptyString] = None
    sortOrder: Optional[SortOrderType] = None


class ListBuildBatchesForProjectOutput(BaseModel):
    ids: Optional[BuildBatchIds] = None
    nextToken: Optional[String] = None


class ListBuildBatchesInput(BaseModel):
    filter: Optional[BuildBatchFilter] = None
    maxResults: Optional[PageSize] = None
    nextToken: Optional[String] = None
    sortOrder: Optional[SortOrderType] = None


class ListBuildBatchesOutput(BaseModel):
    ids: Optional[BuildBatchIds] = None
    nextToken: Optional[String] = None


class ListBuildsForProjectInput(BaseModel):
    nextToken: Optional[String] = None
    projectName: NonEmptyString
    sortOrder: Optional[SortOrderType] = None


class ListBuildsForProjectOutput(BaseModel):
    ids: Optional[BuildIds] = None
    nextToken: Optional[String] = None


class ListBuildsInput(BaseModel):
    nextToken: Optional[String] = None
    sortOrder: Optional[SortOrderType] = None


class ListBuildsOutput(BaseModel):
    ids: Optional[BuildIds] = None
    nextToken: Optional[String] = None


class ListProjectsInput(BaseModel):
    nextToken: Optional[NonEmptyString] = None
    sortBy: Optional[ProjectSortByType] = None
    sortOrder: Optional[SortOrderType] = None


class ListProjectsOutput(BaseModel):
    nextToken: Optional[String] = None
    projects: Optional[ProjectNames] = None


class ListReportGroupsInput(BaseModel):
    maxResults: Optional[PageSize] = None
    nextToken: Optional[String] = None
    sortBy: Optional[ReportGroupSortByType] = None
    sortOrder: Optional[SortOrderType] = None


class ListReportGroupsOutput(BaseModel):
    nextToken: Optional[String] = None
    reportGroups: Optional[ReportGroupArns] = None


class ListReportsForReportGroupOutput(BaseModel):
    nextToken: Optional[String] = None
    reports: Optional[ReportArns] = None


class ListReportsOutput(BaseModel):
    nextToken: Optional[String] = None
    reports: Optional[ReportArns] = None


class ListSharedProjectsInput(BaseModel):
    maxResults: Optional[PageSize] = None
    nextToken: Optional[NonEmptyString] = None
    sortBy: Optional[SharedResourceSortByType] = None
    sortOrder: Optional[SortOrderType] = None


class ListSharedProjectsOutput(BaseModel):
    nextToken: Optional[String] = None
    projects: Optional[ProjectArns] = None


class ListSharedReportGroupsInput(BaseModel):
    maxResults: Optional[PageSize] = None
    nextToken: Optional[String] = None
    sortBy: Optional[SharedResourceSortByType] = None
    sortOrder: Optional[SortOrderType] = None


class ListSharedReportGroupsOutput(BaseModel):
    nextToken: Optional[String] = None
    reportGroups: Optional[ReportGroupArns] = None


class ListSourceCredentialsOutput(BaseModel):
    sourceCredentialsInfos: Optional[SourceCredentialsInfos] = None


class NetworkInterface(BaseModel):
    networkInterfaceId: Optional[NonEmptyString] = None
    subnetId: Optional[NonEmptyString] = None


class PhaseContext(BaseModel):
    message: Optional[String] = None
    statusCode: Optional[String] = None


class PhaseContexts(RootModel[List[PhaseContext]]):
    root: List[PhaseContext]


class ProjectArtifacts(BaseModel):
    artifactIdentifier: Optional[String] = None
    bucketOwnerAccess: Optional[BucketOwnerAccess] = None
    encryptionDisabled: Optional[WrapperBoolean] = None
    location: Optional[String] = None
    name: Optional[String] = None
    namespaceType: Optional[ArtifactNamespace] = None
    overrideArtifactName: Optional[WrapperBoolean] = None
    packaging: Optional[ArtifactPackaging] = None
    path: Optional[String] = None
    type: ArtifactsType


class ProjectArtifactsList(RootModel[List[ProjectArtifacts]]):
    root: List[ProjectArtifacts] = Field(..., max_length=12, min_length=0)


class ProjectBadge(BaseModel):
    badgeEnabled: Optional[Boolean] = None
    badgeRequestUrl: Optional[String] = None


class ProjectCache(BaseModel):
    location: Optional[String] = None
    modes: Optional[ProjectCacheModes] = None
    type: CacheType


class ProjectEnvironment(BaseModel):
    certificate: Optional[String] = None
    computeType: ComputeType
    environmentVariables: Optional[EnvironmentVariables] = None
    image: NonEmptyString
    imagePullCredentialsType: Optional[ImagePullCredentialsType] = None
    privilegedMode: Optional[WrapperBoolean] = None
    registryCredential: Optional[RegistryCredential] = None
    type: EnvironmentType


class ProjectFileSystemLocation(BaseModel):
    identifier: Optional[String] = None
    location: Optional[String] = None
    mountOptions: Optional[String] = None
    mountPoint: Optional[String] = None
    type: Optional[FileSystemType] = None


class ProjectFileSystemLocations(RootModel[List[ProjectFileSystemLocation]]):
    root: List[ProjectFileSystemLocation]


class ProjectSourceVersion(BaseModel):
    sourceIdentifier: String
    sourceVersion: String


class ReportFilter(BaseModel):
    status: Optional[ReportStatusType] = None


class ReportGroupTrendStats(BaseModel):
    average: Optional[String] = None
    max: Optional[String] = None
    min: Optional[String] = None


class ReportStatusCounts(RootModel[Optional[Dict[str, WrapperInt]]]):
    root: Optional[Dict[str, WrapperInt]] = None


class ReportWithRawData(BaseModel):
    data: Optional[String] = None
    reportArn: Optional[NonEmptyString] = None


class ResolvedArtifact(BaseModel):
    identifier: Optional[String] = None
    location: Optional[String] = None
    type: Optional[ArtifactsType] = None


class ResolvedSecondaryArtifacts(RootModel[List[ResolvedArtifact]]):
    root: List[ResolvedArtifact]


class RetryBuildBatchInput(BaseModel):
    id: Optional[NonEmptyString] = None
    retryType: Optional[RetryBuildBatchType] = None


class S3LogsConfig(BaseModel):
    bucketOwnerAccess: Optional[BucketOwnerAccess] = None
    encryptionDisabled: Optional[WrapperBoolean] = None
    location: Optional[String] = None
    status: LogsConfigStatusType


class S3ReportExportConfig(BaseModel):
    bucket: Optional[NonEmptyString] = None
    bucketOwner: Optional[String] = None
    encryptionDisabled: Optional[WrapperBoolean] = None
    encryptionKey: Optional[NonEmptyString] = None
    packaging: Optional[ReportPackagingType] = None
    path: Optional[String] = None


class SourceAuth(BaseModel):
    resource: Optional[String] = None
    type: SourceAuthType


class Tag(BaseModel):
    key: Optional[KeyInput] = None
    value: Optional[ValueInput] = None


class TagList(RootModel[List[Tag]]):
    root: List[Tag] = Field(..., max_length=50, min_length=0)


class TestCase(BaseModel):
    durationInNanoSeconds: Optional[WrapperLong] = None
    expired: Optional[Timestamp] = None
    message: Optional[String] = None
    name: Optional[String] = None
    prefix: Optional[String] = None
    reportArn: Optional[NonEmptyString] = None
    status: Optional[String] = None
    testRawDataPath: Optional[String] = None


class TestCases(RootModel[List[TestCase]]):
    root: List[TestCase]


class TestReportSummary(BaseModel):
    durationInNanoSeconds: WrapperLong
    statusCounts: ReportStatusCounts
    total: WrapperInt


class WebhookFilter(BaseModel):
    excludeMatchedPattern: Optional[WrapperBoolean] = None
    pattern: String
    type: WebhookFilterType


class BatchDeleteBuildsInput(BaseModel):
    ids: BuildIds


class BatchDeleteBuildsOutput(BaseModel):
    buildsDeleted: Optional[BuildIds] = None
    buildsNotDeleted: Optional[BuildsNotDeleted] = None


class BatchGetBuildBatchesInput(BaseModel):
    ids: BuildBatchIds


class BatchGetBuildsInput(BaseModel):
    ids: BuildIds


class BatchRestrictions(BaseModel):
    computeTypesAllowed: Optional[ComputeTypesAllowed] = None
    maximumBuildsAllowed: Optional[WrapperInt] = None


class BuildBatchPhase(BaseModel):
    contexts: Optional[PhaseContexts] = None
    durationInSeconds: Optional[WrapperLong] = None
    endTime: Optional[Timestamp] = None
    phaseStatus: Optional[StatusType] = None
    phaseType: Optional[BuildBatchPhaseType] = None
    startTime: Optional[Timestamp] = None


class BuildBatchPhases(RootModel[List[BuildBatchPhase]]):
    root: List[BuildBatchPhase]


class BuildPhase(BaseModel):
    contexts: Optional[PhaseContexts] = None
    durationInSeconds: Optional[WrapperLong] = None
    endTime: Optional[Timestamp] = None
    phaseStatus: Optional[StatusType] = None
    phaseType: Optional[BuildPhaseType] = None
    startTime: Optional[Timestamp] = None


class BuildPhases(RootModel[List[BuildPhase]]):
    root: List[BuildPhase]


class BuildSummary(BaseModel):
    arn: Optional[String] = None
    buildStatus: Optional[StatusType] = None
    primaryArtifact: Optional[ResolvedArtifact] = None
    requestedOn: Optional[Timestamp] = None
    secondaryArtifacts: Optional[ResolvedSecondaryArtifacts] = None


class DescribeTestCasesOutput(BaseModel):
    nextToken: Optional[String] = None
    testCases: Optional[TestCases] = None


class EnvironmentImage(BaseModel):
    description: Optional[String] = None
    name: Optional[String] = None
    versions: Optional[ImageVersions] = None


class EnvironmentImages(RootModel[List[EnvironmentImage]]):
    root: List[EnvironmentImage]


class EnvironmentLanguage(BaseModel):
    images: Optional[EnvironmentImages] = None
    language: Optional[LanguageType] = None


class EnvironmentLanguages(RootModel[List[EnvironmentLanguage]]):
    root: List[EnvironmentLanguage]


class EnvironmentPlatform(BaseModel):
    languages: Optional[EnvironmentLanguages] = None
    platform: Optional[PlatformType] = None


class EnvironmentPlatforms(RootModel[List[EnvironmentPlatform]]):
    root: List[EnvironmentPlatform]


class FilterGroup(RootModel[List[WebhookFilter]]):
    root: List[WebhookFilter]


class FilterGroups(RootModel[List[FilterGroup]]):
    root: List[FilterGroup]


class ListCuratedEnvironmentImagesOutput(BaseModel):
    platforms: Optional[EnvironmentPlatforms] = None


class ListReportsForReportGroupInput(BaseModel):
    filter: Optional[ReportFilter] = None
    maxResults: Optional[PageSize] = None
    nextToken: Optional[String] = None
    reportGroupArn: String
    sortOrder: Optional[SortOrderType] = None


class ListReportsInput(BaseModel):
    filter: Optional[ReportFilter] = None
    maxResults: Optional[PageSize] = None
    nextToken: Optional[String] = None
    sortOrder: Optional[SortOrderType] = None


class LogsConfig(BaseModel):
    cloudWatchLogs: Optional[CloudWatchLogsConfig] = None
    s3Logs: Optional[S3LogsConfig] = None


class LogsLocation(BaseModel):
    cloudWatchLogs: Optional[CloudWatchLogsConfig] = None
    cloudWatchLogsArn: Optional[String] = None
    deepLink: Optional[String] = None
    groupName: Optional[String] = None
    s3DeepLink: Optional[String] = None
    s3Logs: Optional[S3LogsConfig] = None
    s3LogsArn: Optional[String] = None
    streamName: Optional[String] = None


class ProjectBuildBatchConfig(BaseModel):
    batchReportMode: Optional[BatchReportModeType] = None
    combineArtifacts: Optional[WrapperBoolean] = None
    restrictions: Optional[BatchRestrictions] = None
    serviceRole: Optional[NonEmptyString] = None
    timeoutInMins: Optional[WrapperInt] = None


class ProjectSecondarySourceVersions(RootModel[List[ProjectSourceVersion]]):
    root: List[ProjectSourceVersion] = Field(..., max_length=12, min_length=0)


class ProjectSource(BaseModel):
    auth: Optional[SourceAuth] = None
    buildStatusConfig: Optional[BuildStatusConfig] = None
    buildspec: Optional[String] = None
    gitCloneDepth: Optional[GitCloneDepth] = None
    gitSubmodulesConfig: Optional[GitSubmodulesConfig] = None
    insecureSsl: Optional[WrapperBoolean] = None
    location: Optional[String] = None
    reportBuildStatus: Optional[WrapperBoolean] = None
    sourceIdentifier: Optional[String] = None
    type: SourceType


class ProjectSources(RootModel[List[ProjectSource]]):
    root: List[ProjectSource] = Field(..., max_length=12, min_length=0)


class ReportExportConfig(BaseModel):
    exportConfigType: Optional[ReportExportConfigType] = None
    s3Destination: Optional[S3ReportExportConfig] = None


class ReportGroup(BaseModel):
    arn: Optional[NonEmptyString] = None
    created: Optional[Timestamp] = None
    exportConfig: Optional[ReportExportConfig] = None
    lastModified: Optional[Timestamp] = None
    name: Optional[ReportGroupName] = None
    status: Optional[ReportGroupStatusType] = None
    tags: Optional[TagList] = None
    type: Optional[ReportType] = None


class ReportGroupTrendRawDataList(RootModel[List[ReportWithRawData]]):
    root: List[ReportWithRawData]


class ReportGroups(RootModel[List[ReportGroup]]):
    root: List[ReportGroup] = Field(..., max_length=100, min_length=1)


class StartBuildBatchInput(BaseModel):
    artifactsOverride: Optional[ProjectArtifacts] = None
    buildBatchConfigOverride: Optional[ProjectBuildBatchConfig] = None
    buildTimeoutInMinutesOverride: Optional[TimeOut] = None
    buildspecOverride: Optional[String] = None
    cacheOverride: Optional[ProjectCache] = None
    certificateOverride: Optional[String] = None
    computeTypeOverride: Optional[ComputeType] = None
    debugSessionEnabled: Optional[WrapperBoolean] = None
    encryptionKeyOverride: Optional[NonEmptyString] = None
    environmentTypeOverride: Optional[EnvironmentType] = None
    environmentVariablesOverride: Optional[EnvironmentVariables] = None
    gitCloneDepthOverride: Optional[GitCloneDepth] = None
    gitSubmodulesConfigOverride: Optional[GitSubmodulesConfig] = None
    imageOverride: Optional[NonEmptyString] = None
    imagePullCredentialsTypeOverride: Optional[ImagePullCredentialsType] = None
    insecureSslOverride: Optional[WrapperBoolean] = None
    logsConfigOverride: Optional[LogsConfig] = None
    privilegedModeOverride: Optional[WrapperBoolean] = None
    projectName: NonEmptyString
    queuedTimeoutInMinutesOverride: Optional[TimeOut] = None
    registryCredentialOverride: Optional[RegistryCredential] = None
    reportBuildBatchStatusOverride: Optional[WrapperBoolean] = None
    secondaryArtifactsOverride: Optional[ProjectArtifactsList] = None
    secondarySourcesOverride: Optional[ProjectSources] = None
    secondarySourcesVersionOverride: Optional[ProjectSecondarySourceVersions] = None
    serviceRoleOverride: Optional[NonEmptyString] = None
    sourceAuthOverride: Optional[SourceAuth] = None
    sourceLocationOverride: Optional[String] = None
    sourceTypeOverride: Optional[SourceType] = None
    sourceVersion: Optional[String] = None


class StartBuildInput(BaseModel):
    artifactsOverride: Optional[ProjectArtifacts] = None
    buildStatusConfigOverride: Optional[BuildStatusConfig] = None
    buildspecOverride: Optional[String] = None
    cacheOverride: Optional[ProjectCache] = None
    certificateOverride: Optional[String] = None
    computeTypeOverride: Optional[ComputeType] = None
    debugSessionEnabled: Optional[WrapperBoolean] = None
    encryptionKeyOverride: Optional[NonEmptyString] = None
    environmentTypeOverride: Optional[EnvironmentType] = None
    environmentVariablesOverride: Optional[EnvironmentVariables] = None
    gitCloneDepthOverride: Optional[GitCloneDepth] = None
    gitSubmodulesConfigOverride: Optional[GitSubmodulesConfig] = None
    imageOverride: Optional[NonEmptyString] = None
    imagePullCredentialsTypeOverride: Optional[ImagePullCredentialsType] = None
    insecureSslOverride: Optional[WrapperBoolean] = None
    logsConfigOverride: Optional[LogsConfig] = None
    privilegedModeOverride: Optional[WrapperBoolean] = None
    projectName: NonEmptyString
    queuedTimeoutInMinutesOverride: Optional[TimeOut] = None
    registryCredentialOverride: Optional[RegistryCredential] = None
    reportBuildStatusOverride: Optional[WrapperBoolean] = None
    secondaryArtifactsOverride: Optional[ProjectArtifactsList] = None
    secondarySourcesOverride: Optional[ProjectSources] = None
    secondarySourcesVersionOverride: Optional[ProjectSecondarySourceVersions] = None
    serviceRoleOverride: Optional[NonEmptyString] = None
    sourceAuthOverride: Optional[SourceAuth] = None
    sourceLocationOverride: Optional[String] = None
    sourceTypeOverride: Optional[SourceType] = None
    sourceVersion: Optional[String] = None
    timeoutInMinutesOverride: Optional[TimeOut] = None


class UpdateProjectInput(BaseModel):
    artifacts: Optional[ProjectArtifacts] = None
    badgeEnabled: Optional[WrapperBoolean] = None
    buildBatchConfig: Optional[ProjectBuildBatchConfig] = None
    cache: Optional[ProjectCache] = None
    concurrentBuildLimit: Optional[WrapperInt] = None
    description: Optional[ProjectDescription] = None
    encryptionKey: Optional[NonEmptyString] = None
    environment: Optional[ProjectEnvironment] = None
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    logsConfig: Optional[LogsConfig] = None
    name: NonEmptyString
    queuedTimeoutInMinutes: Optional[TimeOut] = None
    secondaryArtifacts: Optional[ProjectArtifactsList] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    secondarySources: Optional[ProjectSources] = None
    serviceRole: Optional[NonEmptyString] = None
    source: Optional[ProjectSource] = None
    sourceVersion: Optional[String] = None
    tags: Optional[TagList] = None
    timeoutInMinutes: Optional[TimeOut] = None
    vpcConfig: Optional[VpcConfig] = None


class UpdateReportGroupInput(BaseModel):
    arn: NonEmptyString
    exportConfig: Optional[ReportExportConfig] = None
    tags: Optional[TagList] = None


class UpdateReportGroupOutput(BaseModel):
    reportGroup: Optional[ReportGroup] = None


class UpdateWebhookInput(BaseModel):
    branchFilter: Optional[String] = None
    buildType: Optional[WebhookBuildType] = None
    filterGroups: Optional[FilterGroups] = None
    projectName: ProjectName
    rotateSecret: Optional[Boolean] = None


class Webhook(BaseModel):
    branchFilter: Optional[String] = None
    buildType: Optional[WebhookBuildType] = None
    filterGroups: Optional[FilterGroups] = None
    lastModifiedSecret: Optional[Timestamp] = None
    payloadUrl: Optional[NonEmptyString] = None
    secret: Optional[NonEmptyString] = None
    url: Optional[NonEmptyString] = None


class BatchGetReportGroupsOutput(BaseModel):
    reportGroups: Optional[ReportGroups] = None
    reportGroupsNotFound: Optional[ReportGroupArns] = None


class Build(BaseModel):
    arn: Optional[NonEmptyString] = None
    artifacts: Optional[BuildArtifacts] = None
    buildBatchArn: Optional[String] = None
    buildComplete: Optional[Boolean] = None
    buildNumber: Optional[WrapperLong] = None
    buildStatus: Optional[StatusType] = None
    cache: Optional[ProjectCache] = None
    currentPhase: Optional[String] = None
    debugSession: Optional[DebugSession] = None
    encryptionKey: Optional[NonEmptyString] = None
    endTime: Optional[Timestamp] = None
    environment: Optional[ProjectEnvironment] = None
    exportedEnvironmentVariables: Optional[ExportedEnvironmentVariables] = None
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    id: Optional[NonEmptyString] = None
    initiator: Optional[String] = None
    logs: Optional[LogsLocation] = None
    networkInterface: Optional[NetworkInterface] = None
    phases: Optional[BuildPhases] = None
    projectName: Optional[NonEmptyString] = None
    queuedTimeoutInMinutes: Optional[WrapperInt] = None
    reportArns: Optional[BuildReportArns] = None
    resolvedSourceVersion: Optional[NonEmptyString] = None
    secondaryArtifacts: Optional[BuildArtifactsList] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    secondarySources: Optional[ProjectSources] = None
    serviceRole: Optional[NonEmptyString] = None
    source: Optional[ProjectSource] = None
    sourceVersion: Optional[NonEmptyString] = None
    startTime: Optional[Timestamp] = None
    timeoutInMinutes: Optional[WrapperInt] = None
    vpcConfig: Optional[VpcConfig] = None


class BuildSummaries(RootModel[List[BuildSummary]]):
    root: List[BuildSummary]


class Builds(RootModel[List[Build]]):
    root: List[Build]


class CreateProjectInput(BaseModel):
    artifacts: ProjectArtifacts
    badgeEnabled: Optional[WrapperBoolean] = None
    buildBatchConfig: Optional[ProjectBuildBatchConfig] = None
    cache: Optional[ProjectCache] = None
    concurrentBuildLimit: Optional[WrapperInt] = None
    description: Optional[ProjectDescription] = None
    encryptionKey: Optional[NonEmptyString] = None
    environment: ProjectEnvironment
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    logsConfig: Optional[LogsConfig] = None
    name: ProjectName
    queuedTimeoutInMinutes: Optional[TimeOut] = None
    secondaryArtifacts: Optional[ProjectArtifactsList] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    secondarySources: Optional[ProjectSources] = None
    serviceRole: NonEmptyString
    source: ProjectSource
    sourceVersion: Optional[String] = None
    tags: Optional[TagList] = None
    timeoutInMinutes: Optional[TimeOut] = None
    vpcConfig: Optional[VpcConfig] = None


class CreateReportGroupInput(BaseModel):
    exportConfig: ReportExportConfig
    name: ReportGroupName
    tags: Optional[TagList] = None
    type: ReportType


class CreateReportGroupOutput(BaseModel):
    reportGroup: Optional[ReportGroup] = None


class CreateWebhookInput(BaseModel):
    branchFilter: Optional[String] = None
    buildType: Optional[WebhookBuildType] = None
    filterGroups: Optional[FilterGroups] = None
    projectName: ProjectName


class CreateWebhookOutput(BaseModel):
    webhook: Optional[Webhook] = None


class GetReportGroupTrendOutput(BaseModel):
    rawData: Optional[ReportGroupTrendRawDataList] = None
    stats: Optional[ReportGroupTrendStats] = None


class Project(BaseModel):
    arn: Optional[String] = None
    artifacts: Optional[ProjectArtifacts] = None
    badge: Optional[ProjectBadge] = None
    buildBatchConfig: Optional[ProjectBuildBatchConfig] = None
    cache: Optional[ProjectCache] = None
    concurrentBuildLimit: Optional[WrapperInt] = None
    created: Optional[Timestamp] = None
    description: Optional[ProjectDescription] = None
    encryptionKey: Optional[NonEmptyString] = None
    environment: Optional[ProjectEnvironment] = None
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    lastModified: Optional[Timestamp] = None
    logsConfig: Optional[LogsConfig] = None
    name: Optional[ProjectName] = None
    projectVisibility: Optional[ProjectVisibilityType] = None
    publicProjectAlias: Optional[NonEmptyString] = None
    queuedTimeoutInMinutes: Optional[TimeOut] = None
    resourceAccessRole: Optional[NonEmptyString] = None
    secondaryArtifacts: Optional[ProjectArtifactsList] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    secondarySources: Optional[ProjectSources] = None
    serviceRole: Optional[NonEmptyString] = None
    source: Optional[ProjectSource] = None
    sourceVersion: Optional[String] = None
    tags: Optional[TagList] = None
    timeoutInMinutes: Optional[TimeOut] = None
    vpcConfig: Optional[VpcConfig] = None
    webhook: Optional[Webhook] = None


class Projects(RootModel[List[Project]]):
    root: List[Project]


class Report(BaseModel):
    arn: Optional[NonEmptyString] = None
    codeCoverageSummary: Optional[CodeCoverageReportSummary] = None
    created: Optional[Timestamp] = None
    executionId: Optional[String] = None
    expired: Optional[Timestamp] = None
    exportConfig: Optional[ReportExportConfig] = None
    name: Optional[String] = None
    reportGroupArn: Optional[NonEmptyString] = None
    status: Optional[ReportStatusType] = None
    testSummary: Optional[TestReportSummary] = None
    truncated: Optional[WrapperBoolean] = None
    type: Optional[ReportType] = None


class Reports(RootModel[List[Report]]):
    root: List[Report] = Field(..., max_length=100, min_length=1)


class RetryBuildOutput(BaseModel):
    build: Optional[Build] = None


class StartBuildOutput(BaseModel):
    build: Optional[Build] = None


class StopBuildOutput(BaseModel):
    build: Optional[Build] = None


class UpdateProjectOutput(BaseModel):
    project: Optional[Project] = None


class UpdateWebhookOutput(BaseModel):
    webhook: Optional[Webhook] = None


class BatchGetBuildsOutput(BaseModel):
    builds: Optional[Builds] = None
    buildsNotFound: Optional[BuildIds] = None


class BatchGetProjectsOutput(BaseModel):
    projects: Optional[Projects] = None
    projectsNotFound: Optional[ProjectNames] = None


class BatchGetReportsOutput(BaseModel):
    reports: Optional[Reports] = None
    reportsNotFound: Optional[ReportArns] = None


class BuildGroup(BaseModel):
    currentBuildSummary: Optional[BuildSummary] = None
    dependsOn: Optional[Identifiers] = None
    identifier: Optional[String] = None
    ignoreFailure: Optional[Boolean] = None
    priorBuildSummaryList: Optional[BuildSummaries] = None


class BuildGroups(RootModel[List[BuildGroup]]):
    root: List[BuildGroup]


class CreateProjectOutput(BaseModel):
    project: Optional[Project] = None


class BuildBatch(BaseModel):
    arn: Optional[NonEmptyString] = None
    artifacts: Optional[BuildArtifacts] = None
    buildBatchConfig: Optional[ProjectBuildBatchConfig] = None
    buildBatchNumber: Optional[WrapperLong] = None
    buildBatchStatus: Optional[StatusType] = None
    buildGroups: Optional[BuildGroups] = None
    buildTimeoutInMinutes: Optional[WrapperInt] = None
    cache: Optional[ProjectCache] = None
    complete: Optional[Boolean] = None
    currentPhase: Optional[String] = None
    debugSessionEnabled: Optional[WrapperBoolean] = None
    encryptionKey: Optional[NonEmptyString] = None
    endTime: Optional[Timestamp] = None
    environment: Optional[ProjectEnvironment] = None
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    id: Optional[NonEmptyString] = None
    initiator: Optional[String] = None
    logConfig: Optional[LogsConfig] = None
    phases: Optional[BuildBatchPhases] = None
    projectName: Optional[NonEmptyString] = None
    queuedTimeoutInMinutes: Optional[WrapperInt] = None
    resolvedSourceVersion: Optional[NonEmptyString] = None
    secondaryArtifacts: Optional[BuildArtifactsList] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    secondarySources: Optional[ProjectSources] = None
    serviceRole: Optional[NonEmptyString] = None
    source: Optional[ProjectSource] = None
    sourceVersion: Optional[NonEmptyString] = None
    startTime: Optional[Timestamp] = None
    vpcConfig: Optional[VpcConfig] = None


class BuildBatches(RootModel[List[BuildBatch]]):
    root: List[BuildBatch] = Field(..., max_length=100, min_length=0)


class RetryBuildBatchOutput(BaseModel):
    buildBatch: Optional[BuildBatch] = None


class StartBuildBatchOutput(BaseModel):
    buildBatch: Optional[BuildBatch] = None


class StopBuildBatchOutput(BaseModel):
    buildBatch: Optional[BuildBatch] = None


class BatchGetBuildBatchesOutput(BaseModel):
    buildBatches: Optional[BuildBatches] = None
    buildBatchesNotFound: Optional[BuildBatchIds] = None
